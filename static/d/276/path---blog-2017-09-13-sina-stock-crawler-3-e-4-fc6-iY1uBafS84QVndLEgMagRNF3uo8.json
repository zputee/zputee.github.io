{"data":{"site":{"siteMetadata":{"author":"Song Wang","homeCity":"Beijing"}},"markdownRemark":{"html":"<p>A few month ago, my friend Hongkai, Zhang, Ph.D. found me and asked me if I could crawl all the data from <a href=\"http://stock.finance.sina.com.cn/option/quotes.html\">sina stock source</a>, which, provides all sorts of Chinese options data for the next season. I didn’ know too much about the stock, especially from Chinese sites. But I kicked this out since Hongkai is a nice person and he helps me once before; I owe him once.</p>\n<p>Before anything, I wanted to say sorry to my Chinese fellows who are reading this blog; I probably should have written this in Chinese since most of the people might find it useful is probably from China. But please excuse me that I am terrible at Chinese writing(didn’t even finish writing section on <a href=\"https://www.wikiwand.com/en/National_Higher_Education_Entrance_Examination\">Gaokao</a>), and I’ve been writing English for a while, and I am used to it now.</p>\n<h2>Digging Sina’s API</h2>\n<h3>The source</h3>\n<p>First thing for this project is to find where the data comes from and if there is an API opened to the public already, so I can get the data without crawling raw web pages and mining the data. </p>\n<p>Typically the API would be written within the developer’s page from a company. But Sina, like a lot of other Chinese company, doesn’t have much of developer’s instructions, including API protocols. So I did some research on Sina and found the API lives on another one site, <a href=\"http://hq.sinajs.cn/list=OP_DOWN_5100501707\">here</a>. </p>\n<h3>The REST API of Sina</h3>\n<p>The API site is a multi end point REST API, with the list of each stock table with a hash id. While the index comes from <a href=\"http://stock.finance.sina.com.cn/futures/api/openapi.php/StockOptionService.getRemainderDay?date=201706\">here</a>, with a <code class=\"language-text\">getRemainderDay</code> method and a query string <code class=\"language-text\">date</code> for the month of each month’s stock index. And finally, the data stays and the endpoints in a normal JSON format.</p>\n<h2>The algorithm</h2>\n<p>Since the index of all data is stored in one API endpoint, and the list for each stock option comes from another API endpoint. The data structure is similar to a two-dimensional list. So I can just loop through the first API to get all the list and paired them with <code class=\"language-text\">UP</code> table and <code class=\"language-text\">DOWN</code> table, and loop through all the paired <code class=\"language-text\">UP</code>s and <code class=\"language-text\">DOWN</code>s’ data and combine them with a whole table. It’s a simple and straightforward solution, and I don’t see anywhere around it.</p>\n<h2>Python Codes</h2>\n<p>It’s been a few month I never write python, but thankfully Python is easy to pick up, as the syntax is pretty clean. I finished the two loops with seven functions and one extra loop with writing CSV file. Source code lives <a href=\"https://github.com/wangsongiam/sina-stock-crawler\">here</a>. </p>","excerpt":"A few month ago, my friend Hongkai, Zhang, Ph.D. found me and asked me if I could crawl all the data from  sina stock source , which…","fields":{"slug":"/blog/2017-09-13-sina-stock-crawler/","tagSlugs":["/tags/stock/","/tags/python/","/tags/crawler/","/tags/data/"]},"frontmatter":{"title":"Sina stock crawler","tags":["stock","python","crawler","data"],"description":null,"date":"September 14, 2017"}}},"pageContext":{"slug":"/blog/2017-09-13-sina-stock-crawler/","previous":{"fields":{"slug":"/blog/2017-09-04-arrow-function-greater-more-expressions-and-less-statement/"},"frontmatter":{"title":"More expressions and less statements with arrows","tags":["functional programming","es6"]}},"next":{"fields":{"slug":"/blog/2017-09-14-copy-paste-multiple-files-in-terminal/"},"frontmatter":{"title":"Copy paste multiple files in terminal with brace expansion","tags":["linux","unix","shell"]}}}}